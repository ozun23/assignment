# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DjHGZDM5gSThuIT1mWkikcuP0KK7s_OW
"""

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

# Read excel file
file_name = "task_2.7_dataset.xlsx"
df = pd.read_excel(file_name)

# Count occurrences of faculty in the 'Faculty' column
faculty_counts = df['Faculty'].value_counts()

# Extract counts for specific faculty values
faculty_values = ['WE', 'IR', 'LK', 'GF', 'SW', 'MILO', 'RC', 'PE', 'LW']
faculty_counts_list = [faculty_counts.get(value, 0) for value in faculty_values]

# Print occurrences of faculty values
for value, count in zip(faculty_values, faculty_counts_list):
    print(f"Occurrences of {value}: {count}")

# Create a bar chart for the number of mails per faculty
plt.bar(faculty_values, faculty_counts_list, color='green')
plt.xlabel('Faculty')
plt.ylabel('Number of mails')
plt.title('Number of mails handled per faculty')
plt.show()

# Function to determine the name based on faculty
def assign_name(row):
    if row['Faculty'] in ['WE', 'IR']:
        return 'Jone'
    elif row['Faculty'] in ['LK', 'GF']:
        return 'Pieter'
    elif row['Faculty'] in ['MILO', 'PE', 'RC', 'LW', 'SW']:
        return 'Ozgun'
    else:
        return 'Not determined'

# Add Jone, Pieter or Ozgun depending on faculty
df['Mail handled by'] = df.apply(assign_name, axis=1)
df.to_excel(file_name, index=False)

# Count occurrences of names in the 'Mail handled by' column
name_counts = df['Mail handled by'].value_counts()

# Define names dynamically
names = name_counts.index.tolist()

# Extract counts for specific names
counts = np.array([name_counts.get(name, 0) for name in names])

# Calculate the total count
total_count = counts.sum()

# Calculate the percentage
percentages = (counts / total_count) * 100

# Print occurrences and percentages
for name, count, percentage in zip(names, counts, percentages):
    print(f"Occurrences of {name}: {count} ({percentage:.2f}%)")

# Create a bar chart for the number of mails handled per data steward
plt.bar(names, counts, color=['purple', 'orange', 'blue'])
plt.xlabel('Name of data steward')
plt.ylabel('Number of emails')
plt.title('Number of mails handled per data steward')
plt.show()